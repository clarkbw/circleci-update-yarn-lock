#!/usr/bin/env bash
# inspired by https://gist.github.com/maxrimue/16e272c4e0b8a8ac9dd5570e180e08c0

# this script is only for CircleCI
if [[ -z $CIRCLECI ]]; then
	echo ">> must be run in CircleCI";
	exit 1;
fi

if [[ $CIRCLE_BRANCH != *"greenkeeper"* ]]; then
	# Not a GreenKeeper Pull Request, aborting
	echo ">> not a greenkeeper branch";
	exit 0;
fi

# ensure we are in the build directory if that exists (does not exist in tests)
if [[ $CIRCLE_PROJECT_REPONAME != "" ]]; then
	echo ">> cd $HOME/$CIRCLE_PROJECT_REPONAME";
	cd $HOME/$CIRCLE_PROJECT_REPONAME;
fi

# See if commit message includes "update"
git log --name-status HEAD^..HEAD | grep "update" || { echo ">> not an update commit"; exit 0; }

# only continue if yarn exits with error code (needs to update)
yarn check && { echo ">> yarn check passed, yarn.lock does not need to update"; exit 0; }

# Run yarn to create/update lockfile
yarn install && { echo ">> running yarn install"; }

USER_EMAIL=${USER_EMAIL:-"circleci@users.noreply.github.com"}
USER_NAME=${USER_NAME:-"CircleCI"}

# Setup git for this user
git config user.email $USER_EMAIL
git config user.name $USER_NAME
git config push.default simple

echo ">> git config $USER_NAME <$USER_EMAIL>";

# Output the diff to CI
git --no-pager diff

# Commit and push yarn.lock file
git add yarn.lock
git commit -m "chore(yarn): update yarn.lock"
git push origin $CIRCLE_BRANCH
